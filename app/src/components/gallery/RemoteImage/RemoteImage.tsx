import React, { useState, useCallback } from 'react'
import { Icon } from '@/components'
import { combineClassNames } from '@/utils'
import { RemoteImageProps } from './types'
import styles from './RemoteImage.module.scss'

export const RemoteImage = ({
  src,
  alt,
  shape,
  className,
  loading = 'lazy',
  onLoad,
  onError,
}: RemoteImageProps) => {
  const [isLoaded, setIsLoaded] = useState(false)
  const [hasError, setHasError] = useState(false)

  const handleLoad = useCallback(() => {
    setIsLoaded(true)
    setHasError(false)
    onLoad?.()
  }, [onLoad])

  const handleError = useCallback(() => {
    setIsLoaded(false)
    setHasError(true)
    onError?.()
  }, [onError])

  // Get shape class based on size
  const shapeClass = shape === 'L' ? 'aiuta-image-l' : 'aiuta-image-m'
  const containerClasses = combineClassNames(styles.remoteImage, shapeClass, className)
  const imageClasses = combineClassNames(styles.image, isLoaded && styles.image_loaded)

  return (
    <div className={containerClasses}>
      {!hasError && (
        <img
          src={src}
          alt={alt}
          className={imageClasses}
          loading={loading}
          decoding="async"
          onLoad={handleLoad}
          onError={handleError}
        />
      )}

      {hasError && (
        <Icon
          icon="<path d='M30.4238 23.6758C30.6471 23.6971 30.8642 23.7939 31.0352 23.9648C31.4257 24.3554 31.4257 24.9884 31.0352 25.3789L28.9131 27.5L31.0342 29.6211C31.4246 30.0116 31.4245 30.6446 31.0342 31.0352C30.8633 31.2061 30.646 31.3029 30.4229 31.3242C30.3592 31.3303 30.2951 31.3303 30.2314 31.3242C30.0083 31.3029 29.791 31.2061 29.6201 31.0352L27.499 28.9141L25.3789 31.0352C25.2081 31.206 24.9906 31.3028 24.7676 31.3242C24.7036 31.3304 24.6391 31.3304 24.5752 31.3242C24.3522 31.3028 24.1356 31.2059 23.9648 31.0352C23.5743 30.6446 23.5743 30.0116 23.9648 29.6211L26.085 27.5L23.9629 25.3789C23.5725 24.9885 23.5727 24.3554 23.9629 23.9648C24.1337 23.794 24.3512 23.6972 24.5742 23.6758C24.6382 23.6696 24.7027 23.6696 24.7666 23.6758C24.9895 23.6972 25.2062 23.7941 25.377 23.9648L27.499 26.0859L29.6211 23.9648C29.7919 23.794 30.0093 23.6971 30.2324 23.6758C30.296 23.6697 30.3602 23.6697 30.4238 23.6758ZM23.9355 17.8086C25.2341 16.7304 27.271 16.7301 28.5693 17.8086L30.5088 19.4199C30.9334 19.7728 30.9915 20.4033 30.6387 20.8281C30.2858 21.253 29.6553 21.3109 29.2305 20.958L27.291 19.3477C26.7334 18.8844 25.7716 18.8845 25.2139 19.3477L20.2637 23.4551C18.9652 24.5334 16.9293 24.5335 15.6309 23.4551L15.6221 23.4482L15.2344 23.1182C14.7354 22.7069 13.8615 22.6526 13.2793 23.0303L7.41406 26.8389C6.95085 27.1396 6.33102 27.0081 6.03027 26.5449C5.72952 26.0817 5.86198 25.4619 6.3252 25.1611L12.1904 21.3525C13.4867 20.5115 15.3243 20.5934 16.5156 21.583L16.5244 21.5908L16.9121 21.9199C17.4702 22.38 18.4289 22.379 18.9854 21.917L23.9355 17.8086ZM14 10C14.7956 10 15.5585 10.3164 16.1211 10.8789C16.6837 11.4415 17 12.2043 17 13C17 13.7957 16.6837 14.5585 16.1211 15.1211C15.5585 15.6836 14.7956 16 14 16C13.2044 15.9999 12.4415 15.6837 11.8789 15.1211C11.3164 14.5585 11 13.7956 11 13C11 12.2044 11.3164 11.4415 11.8789 10.8789C12.4415 10.3163 13.2044 10.0001 14 10ZM14 12C13.7349 12.0001 13.4805 12.1055 13.293 12.293C13.1055 12.4805 13 12.7348 13 13C13 13.2652 13.1055 13.5195 13.293 13.707C13.4805 13.8945 13.7349 13.9999 14 14C14.2652 14 14.5195 13.8945 14.707 13.707C14.8946 13.5195 15 13.2652 15 13C15 12.7348 14.8946 12.4805 14.707 12.293C14.5195 12.1055 14.2652 12 14 12Z' fill='currentColor'/><path fill-rule='evenodd' clip-rule='evenodd' d='M7.24289 28.7571C8.87218 30.3864 11.3014 31 14.4 31H19.2C19.7523 31 20.2 30.5523 20.2 30C20.2 29.4477 19.7523 29 19.2 29H14.4C11.4986 29 9.72782 28.4136 8.65711 27.3429C7.5864 26.2722 7 24.5014 7 21.6V14.4C7 11.4986 7.5864 9.72781 8.65711 8.65711C9.72782 7.5864 11.4986 7 14.4 7H21.6C24.5014 7 26.2722 7.5864 27.3429 8.65711C28.4136 9.72781 29 11.4986 29 14.4V20.4C29 20.9523 29.4477 21.4 30 21.4C30.5523 21.4 31 20.9523 31 20.4V14.4C31 11.3014 30.3864 8.87218 28.7571 7.24289C27.1278 5.6136 24.6986 5 21.6 5H14.4C11.3014 5 8.87218 5.6136 7.24289 7.24289C5.6136 8.87218 5 11.3014 5 14.4V21.6C5 24.6986 5.6136 27.1278 7.24289 28.7571Z' fill='currentColor'/>"
          size={36}
          viewBox="0 0 36 36"
          className={styles.errorIcon}
        />
      )}
    </div>
  )
}
